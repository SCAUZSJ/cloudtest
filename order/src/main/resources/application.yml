
server:
  port: 8051


spring:
  application:
    name: order-service #指定服务名称

eureka:
  client:
    register-with-eureka: true #是否注册到Eureka服务中
    fetch-registry: true #是否从Eureka服务中获取注册信息
    service-url: #Eureka客户端与服务端进行交互的地址
      defaultZone: http://milo:123456@milo-eureka:7000/eureka/
  instance:
    prefer-ip-address: true #把ip地址注册到Eureka服务中

## spring security
security:
  oauth2:
    client:
      client-id: client
      client-secret: secret
      ignore-urls:
        - /actuator/**
        - /order/common/**
    resource:
      loadBalanced: true
      token-info-uri: http://oauth-service/oauth/check_token

# 暴露监控端点
management:
  #  metrics:
  #    web:
  #      client:
  #        max-uri-tags: 500 #默认为100
  #      server:
  #        max-uri-tags: 500 #默认为100
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always #是否显示详述when_authorized，never,always
      # never：从不展示健康项
      # when-authorized：签名认证之后展示
      # always：每次都展示
#  health:
#    mail:
#      enabled: true
#    rabbit:
#      enabled: false
#    binders:
#      enabled: true